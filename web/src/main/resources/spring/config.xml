<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <bean id="dataSourceMaster" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="net.sf.log4jdbc.DriverSpy" />
        <property name="jdbcUrl"
                  value="jdbc:log4jdbc:mysql://127.0.0.1:3306/Synship?useOldAliasMetadataBehavior=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true" />
        <property name="user" value="root"/>
        <property name="password" value="sneakerhead"/>
        <!--初始化时获取连接的数目，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="5"></property>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="30"></property>
        <property name="minPoolSize" value="5"></property>
        <property name="testConnectionOnCheckout"  value="true"></property>
        <!--如果设为true那么在取得连接的同时将校验连接的有效性。Default: false -->
        <property name="testConnectionOnCheckin" value="true"></property>
        <!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意： 测试的表必须在初始数据源的时候就存在。Default: null-->
        <property name="preferredTestQuery" value="SELECT CURRENT_DATE"></property>
        <!--最大空闲时间,单位为秒。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="14400"></property>
        <!--强迫连接池扑杀任何的连接，这些连接超过了设置的秒数。(现将其设置为数据库wait_timeout的1/2)-->
        <property name="maxConnectionAge" value="14400"></property>
    </bean>

    <bean id="sqlSessionFactoryMaster" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- SqlSessionFactory的数据源 -->
        <property name="dataSource" ref="dataSourceMaster"/>
        <!-- 指定sqlMapConfig总配置文件，订制的environment在spring容器中不在生效-->
        <property name="configLocation" value="classpath:com/voyageone/mybatis/myBatisConfig.xml"/>
        <!--指定实体类映射文件，可以指定同时指定某一包以及子包下面的所有配置文件 -->
        <property name="mapperLocations" value="classpath*:com/voyageone/**/*Mapper.xml"/>
        <!-- 配置Mybatis的插件plugin-->
        <property name="plugins">
            <array>
                <bean class="com.voyageone.base.dao.mysql.MybatisSchemaInterceptor">
                    <property name="properties">
                        <value>
                            database_schema=Synship
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--定义扫描的接口包,可以直接将sql 映射成接口,减少代码量-->
    <bean id="MapperScannerConfigurerMaster" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.voyageone.**.dao.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryMaster"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactoryMaster" />
    </bean>
</beans>